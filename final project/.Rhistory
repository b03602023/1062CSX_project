?get.ff
install.packages("ff")
library(ff)
predict <- forecast.elm(model)
x = ts(tp_data[,2])
model <- elm(x)
predict <- forecast.elm(model)
predict
predict <- forecast(model)
#--------ML 3-------------
#nnfor package
library(nnfor)
x = ts(tp_data[,1])
model <- elm(x)
predict <- forecast(model)
forecast
?forecast
m <- mlp(x)
pred <- forecast(m)
View(pred)
p <- predict(mlp)
?predict
### Crawler_Example with rvest    #####################################################################
# 參考：https://blog.gtwang.org/r/rvest-web-scraping-with-r/
rm(list = ls())
library(rvest)
# Set url
url <- "https://www.ptt.cc/bbs/TW_Entertain/index"
index.no <- 500:518
paste0(url, index, ".html")
paste0(url, index.no, ".html")
# Set url
prefix <- "https://www.ptt.cc/bbs/TW_Entertain/index"
index.no <- 500:518
url <- paste0(url, index.no, ".html")
paste0(url, index.no, ".html")
url <- paste0(prefix, index.no, ".html")
url
# Get response
res <- read_html(url)
# Get response
res <- read_html(url[1])
# Get response
res <- read_html(url[1])
res
setwd("D:/D disk/unicourse/106shia/github/1062CSX_project/final project")
getwd()
url <- "https://zh.wikipedia.org/zh-tw/%E7%B6%9C%E8%97%9D%E5%A4%A7%E7%86%B1%E9%96%80"
# Get response
res <- read_html(url)
# Parse the content and extract the titles
# . for class; # for ID
raw.titles <- res %>% html_nodes("table#wikitable")
# Parse the content and extract the titles
# . for class; # for ID
raw.titles <- html_nodes(res,"table.wikitable")
library(rvest)
library(rvest)
url <- "https://zh.wikipedia.org/zh-tw/%E7%B6%9C%E8%97%9D%E5%A4%A7%E7%86%B1%E9%96%80"
# Get response
res <- read_html(url)
# Parse the content and extract the titles
# . for class; # for ID
raw.titles <- html_nodes(res,"table.wikitable")
library(rvest)
url <- "https://zh.wikipedia.org/zh-tw/%E7%B6%9C%E8%97%9D%E5%A4%A7%E7%86%B1%E9%96%80"
# Get response
res <- read_html(url)
# Parse the content and extract the titles
# . for class; # for ID
raw.titles <- html_nodes(res,"table.wikitable")
text <- html_text(html_nodes(x =res, css = "table.wikitable tbody tr td"))
html_text(raw.titles )
text <- html_text(raw.titles)
text
length(text)
class(text)
View(text)
text <- text[[26:27]]
text <- text[26:27]
View(text)
t1 <- text[[1]]
t1
t1[1]
t1 <- unlist(strsplit(t1,split="\n", fixed=T))
t1
library(rvest)
url <- "https://zh.wikipedia.org/zh-tw/%E7%B6%9C%E8%97%9D%E5%A4%A7%E7%86%B1%E9%96%80"
# Get response
res <- read_html(url)
# Parse the content and extract the titles
# . for class; # for ID
raw.titles <- html_nodes(res,"table.wikitable")
text <- html_text(html_nodes(x =res, css = "table.wikitable tbody tr td"))
text <- html_text(raw.titles)
View(text)
text <- text[22:24]
t1 <- text[[1]]
t1 <- unlist(strsplit(t1,split="\n", fixed=T))
t1
l <- length(t1)
l
13%/%4
13%%4
l%%4
t1[l]
t1[l][1]
?gsub
split?
d
?split
split(t1[l],4)
split(t1[l],sep="年")
strsplit(t1[l],sep="年")
strsplit(t1[l],spilt="年")
strsplit(t1[l],split="年")
strsplit(t1[l],split="年")[[1]]==2017
strsplit(t1[l],split="年")[[1]][1]==2017
sortout <- function(t, yr){
for(i in 1:length(t)){
if(strsplit(t[i],split="年")[[1]][1]==yr){
temp <- t[-i]
}
}
return(temp)
}
t1 <- sortout(t1,2017)
t1 <- sortout(t1,"2017")
length(t1)
length(t1)-5
t1[1:7]
length(t1)-5
(length(t1)-5)/6
(length(t1)-5)/21
?seq
l <- (length(t1)-5)/21
l
seq(21, (length(t)-5), by=21)
seq(21, (length(t1)-5), by=21)
sortout <- function(t){
p <- seq(21, (length(t)-5), by=21)
t <- t[-p]
return(t)
}
t1 <- sortout(t1)
t1
t1 <- t1[-(seq(21, (length(t)-5), by=21))]
t1 <- t1[-(seq(21, (length(t1)-5), by=21))]
t1
t1 <- t1[-(1:5)]
t1 <- text[[1]]
t1 <- unlist(strsplit(t1,split="\n", fixed=T))
t1 <- t1[-(1:5)]
t1
t1[1]
sortout <- function(t){
p <- seq(21, length(t), by=21)
t <- t[-p]
return(t)
}
t1 <- sortout(t1)
t1
length(t1)
sortout <- function(t){
p <- seq(21, length(t), by=21)
t <- t[-p]
p <- seq(5, length(t), by=5)
t <- t[-p]
return(t)
}
t1 <- sortout(t1)
t1 <- text[[1]]
t1 <- unlist(strsplit(t1,split="\n", fixed=T))
t1 <- t1[-(1:5)]
sortout <- function(t){
p <- seq(21, length(t), by=21)
t <- t[-p]
p <- seq(5, length(t), by=5)
t <- t[-p]
return(t)
}
t1 <- sortout(t1)
t1
t1 <- text[[1]]
t1 <- unlist(strsplit(t1,split="\n", fixed=T))
t1 <- t1[-(1:5)]
t1
p <- seq(21, length(t1), by=21)
t1 <- t1[-p]
t1
p <- seq(5, length(t), by=5)
p <- seq(5, length(t1), by=5)
p1
p
t <- t[-p]
t1 <- t1[-p]
t1
t1 <- text[[1]]
t1 <- unlist(strsplit(t1,split="\n", fixed=T))
t1 <- t1[-(1:5)]
p <- seq(21, length(t1), by=21)
t1 <- t1[-p]
p <- seq(5, length(t1), by=5)
t1
t1 <- text[[1]]
t1 <- unlist(strsplit(t1,split="\n", fixed=T))
t1 <- t1[-(1:5)]
sortout <- function(t){
p <- seq(21, length(t), by=21)
t <- t[-p]
p <- numeric()
for(i in 1:length(t)){
if(t[i]==""){p=c(p,i)}
}
t <- t[-p]
return(t)
}
t1 <- sortout(t1)
t1
t1 <- text[[1]]
t1
t1 <- unlist(strsplit(t1,split="\n", fixed=T))
t1 <- t1[-(1:5)]
t1
13%%4
c <-c(2,1,3,5)
cc <-seq(1,14,1)
cc[-c]
cc
sortout <- function(t){
p <- numeric()
q <- numeric()
for(i in 1:length(t)){
if(t[i]==""){p=c(p,i)}
if(length(p)%%4==0){q=c(q,length(p)+1)}
}
t <- t[-c(p,q)]
return(t)
}
t1 <- sortout(t1)
t1 <- text[[1]]
t1 <- unlist(strsplit(t1,split="\n", fixed=T))
t1 <- t1[-(1:5)]
sortout <- function(t){
p <- numeric()
q <- numeric()
for(i in 1:length(t)){
if(t[i]==""){p=c(p,i)}
if(length(p)%%4==0){q=c(q,length(p)+1)}
}
t <- t[-c(p,q)]
return(t)
}
t1 <- sortout(t1)
t1
text <- text[22:24]
t1 <- text[[1]]
t1 <- unlist(strsplit(t1,split="\n", fixed=T))
t1 <- t1[-(1:5)]
t1
text <- html_text(html_nodes(x =res, css = "table.wikitable tbody tr td"))
text <- html_text(raw.titles)
text <- text[22:24]
t1 <- unlist(strsplit(t1,split="\n", fixed=T))
t1 <- text[[1]]
t1 <- t1[-(1:5)]
t1
# Parse the content and extract the titles
# . for class; # for ID
raw.titles <- html_nodes(res,"table.wikitable")
text <- html_text(html_nodes(x =res, css = "table.wikitable tbody tr td"))
text <- html_text(raw.titles)
text <- text[22:24]
t1 <- text[[1]]
t1 <- unlist(strsplit(t1,split="\n", fixed=T))
t1 <- t1[-(1:5)]
t1
sortout <- function(t){
p <- numeric()
q <- numeric()
d1 <- 0     #d1和d2的作用就是避免嘉賓有空格而占兩個位置情況產生的bug
d2 <- 1
for(i in 1:length(t)){
if(t[i]==""){
p=c(p,i)
if(length(p)%%4==0){d1=d1+1}
}
if(d1==d2){q=c(q,i+1);d2=d2+1}
}
t <- t[-c(p,q)]
return(t)
}
t1 <- sortout(t1)
t1
library(rvest)
url <- "https://zh.wikipedia.org/zh-tw/%E7%B6%9C%E8%97%9D%E5%A4%A7%E7%86%B1%E9%96%80"
# Get response
res <- read_html(url)
# Parse the content and extract the titles
# . for class; # for ID
raw.titles <- html_nodes(res,"table.wikitable")
text <- html_text(html_nodes(x =res, css = "table.wikitable tbody tr td"))
text <- html_text(raw.titles)
#View(text)
#2017-2018
text <- text[21:24]    #第991~1183集 (2017/0703~2018/06/07)
#text <- matrix(text, nrow=length(text))
text <- lapply(X = text, FUN = strsplit, split="\n", fixed=T)
#text <- lapply(text, unlist)
text <- unlist(text)
title <- text[1:5]
n = 5000
#---------清理函數-------
clean <- function(text){
#----------------the final version----------------------
#f <- function(t1){
#tda = matrix(tok, ncol=length(title),byrow=TRUE)
#t1 <- text[[2]]
#t1 <- unlist(strsplit(t1,split="\n", fixed=T))
#t1 <- unlist(strsplit(t1,split="\n", fixed=T))
t1 <- text
t1 <- t1[-(1:5)]
#-------重播位置-----------
p <- numeric()     #重播位置
for(i in 1:length(t1)){
if(gregexpr("年",t1[i])[[1]][1]==5){
p <- c(p,i)
}
}
t1 <- t1[-p]
#--------嘉賓佔多格--guest-----
#處理嘉賓佔多格的情況
a=1
while(a<10){
start <- as.numeric(t1[1])
ep <- seq(start, start+length(t1),by=1)
j<-1        #ep位置
rplace<-1   #r 位置
r=numeric()
for(i in 1:n){
if(is.na(t1[i+5])){break}
if(t1[i]=="集數"){
t1 <-c(t1[1:(i-1)], t1[(i+5):length(t1)])
print(i)
}
if(ep[j]==t1[i]&&ep[j+1]==t1[i+6]){     #嘉賓佔2格
t1[i+3] <- paste0(t1[i+3],",",t1[i+4])
r[rplace] <- (i+4)                        #嘉賓第二格的位置(之後要移除的)
j=j+1
rplace=rplace+1
}
if(ep[j]==t1[i]&&ep[j+1]==t1[i+7]){     #嘉賓佔3格
t1[i+3] <- paste0(t1[i+3],",",t1[i+4],",",t1[i+5])
r[rplace:(rplace+1)] <- c(i+4,i+5)        #嘉賓第二格的位置(之後要移除的)
j=j+1
rplace=rplace+2
}
if(ep[j]==t1[i]&&ep[j+1]==t1[i+8]){     #嘉賓佔4格
t1[i+3] <- paste0(t1[i+3],",",t1[i+4],",",t1[i+5],",",t1[i+6])
r[rplace:(rplace+2)] <- c(i+4,i+5,i+6)        #嘉賓第二格的位置(之後要移除的)
j=j+1
rplace=rplace+3
}
if((ep[j]==t1[i]&&ep[j+1]==t1[i+5])||
(ep[j]==t1[i]&&ep[j+1]==t1[i+4])||
(ep[j]==t1[i]&&ep[j+1]==t1[i+3])||
(ep[j]==t1[i]&&ep[j+1]==t1[i+2])||
(ep[j]==t1[i]&&ep[j+1]==t1[i+1])
){     #嘉賓佔一格
j=j+1
}
}
if(c(r,2) == 2){break}
t1 <- t1[-r]
a=a+1
}
#--------上下分集----------
i=1
for(i in 1:n){
if(is.na(t1[i+5])){break}
#1. (下) 接 (上)
if((substr(t1[i],(nchar(t1[i])-2),nchar(t1[i]))=="(下)") && (substr(t1[i+5], 1, 5) == substr(t1[i+1], 1, 5))){
act2 <- substr(t1[i+1], gregexpr(")",t1[i+1])[[1]][1]+2, nchar(t1[i+1]))  #演員暫時 ()
act1 <- t1[i-4]
t1[i] <- paste0(t1[i], ",", substr(t1[i+1], 1, gregexpr(")",t1[i+1])[[1]][1])) #雙重主題
t1[i+1] <- paste0(act1, ",", act2)    #雙重演員
t1 <-c(t1[1:(i+5)], act2, "", t1[(i+6):length(t1)])   #接續的演員
print(i)
}
#2.  處理上下不同天的情況
if(substr(t1[i], 1, 5) == substr(t1[i+5], 1, 5)&&t1[i]!=""&&t1[i+1]!=""&&nchar(t1[i+6])<5&&t1[i+6]!=""){
act <- t1[i+1]
t1 <-c(t1[1:(i+5)], act, "", t1[(i+6):length(t1)])   #接續的演員
print(i)
}
#1018 第二回的bug
if(substr(t1[i], 1, 5) == substr(t1[i+5], 1, 5)&&t1[i]!=""&&t1[i+1]!=""&&nchar(t1[i+6])<5){
act <- t1[i+1]
t1 <-c(t1[1:(i+5)], act, t1[(i+6):length(t1)])   #接續的演員
print(i)
}
#3.  處理上下不同天的情況，但沒有上下分集
#1001
if(nchar(t1[i])<=4&&nchar(t1[i+2])<=4&&t1[i]!=""&&t1[i+2]!=""){
if(t1[i]==(as.numeric(t1[i+2])-1)){
t1 = c(t1[1:(i+1)],t1[(i-3):(i-1)],t1[(i+2):length(t1)])
}
}
if(t1[i]==1182){break}
if(nchar(t1[i])<=4&&nchar(t1[i+2])<=4&&t1[i]!=""){
if(t1[i]==(as.numeric(t1[i+3])-1)){
t1 = c(t1[1:(i+1)],t1[(i-3):(i-2)],t1[(i+2):length(t1)])
}
}
}
t1 <- data.frame(matrix(t1, ncol=length(title), byrow=TRUE))
names(t1) <- title
return(t1)
}
c_text <- clean(text)   #處理好的data.frame
#清理空白的欄位(row)
for(i in 1:nrow(c_text)){
if(c_text[i,3]==""){
c_text <- c_text[1:(i-1),]
return(c_text)
}
}
#整理格式
c_text$"主題" <- as.character(c_text$"主題")
c_text$"來賓" <- as.character(c_text$"來賓")
c_text$"集數" <- as.numeric(as.character(c_text$"集數"))
#來賓
guest <- c_text$"來賓"
library(magrittr)
try <- function(guest){
guest <- guest %>% lapply(.,strsplit, "、") %>%
unlist %>%
lapply(.,strsplit,":") %>%
unlist %>%
lapply(.,strsplit,"&") %>%
unlist %>%
lapply(.,strsplit,",") %>% unlist %>%
lapply(.,strsplit,"：") %>% unlist
return(guest)
}
gg <- try(guest)
gg <- lapply(X = gueset, FUN = try)
gg <- lapply(X = guest, FUN = try)
gg[[1]]
View(gg)
cleanguest <- function(guest){
guest <- guest %>% lapply(.,strsplit, "、") %>%
unlist %>%
lapply(.,strsplit,":") %>%
unlist %>%
lapply(.,strsplit,"&") %>%
unlist %>%
lapply(.,strsplit,",") %>% unlist %>%
lapply(.,strsplit,"：") %>% unlist
return(guest)
}
guest_list <- lapply(X = guest, FUN = cleanguest)
guest_vector <- cleanguest(guest)
f_guest <- as.factor(guest_vector)
View(table(f_guest))
hist(f_guest)
#------plot guest-------
library(ggplot2)
table(f_guest)$Freq
table(f_guest)$"Freq"
head(table(f_guest))
table(f_guest)[1]
table(f_guest)[3]
#------plot guest-------
barplot(table(f_guest))
max(table(f_guest))
View(tabel(f_guest)[order(f_guest)])
View(table(f_guest)[order(f_guest)])
View(order(f_guest))
View(table(f_guest)[order(table(f_guest))])
?order
#------plot guest-------
barplot(table(f_guest)[order(table(f_guest), decreasing = TRUE)])
#------plot guest-------
barplot(table(f_guest)[order(table(f_guest), decreasing = TRUE)][1:15])
#------plot guest-------
barplot(table(f_guest)[order(table(f_guest), decreasing = TRUE)][1:20])
#------plot guest-------
barplot(table(f_guest)[order(table(f_guest), decreasing = TRUE)][1:20]
, las = 1)
#------plot guest-------
barplot(table(f_guest)[order(table(f_guest), decreasing = TRUE)][1:20]
, las = 2)
#------plot guest-------
barplot(table(f_guest)[order(table(f_guest), decreasing = TRUE)][1:20]
, las = 3)
#------plot guest-------
barplot(table(f_guest)[order(table(f_guest), decreasing = TRUE)][1:20]
, las = 4)
#------plot guest-------
barplot(table(f_guest)[order(table(f_guest), decreasing = TRUE)][1:20]
, las = 2)
#------plot guest-------
barplot(table(f_guest)[order(table(f_guest), decreasing = TRUE)][1:25]
, las = 2)
table(f_guest)[order(table(f_guest), decreasing = TRUE)][1:2]
grid()
#------plot guest-------
barplot(table(f_guest)[order(table(f_guest), decreasing = TRUE)][1:25]
, las = 2, ylim = c(0,35))
grid()
length(table(f_guest))
